---
resources:
  tb:network:MultiCidrVpc:
    vpc:
      cidr_block: 10.0.0.0/16
      egress_via_internet_gateway: True
      enable_dns_hostnames: True
      enable_internet_gateway: True
      endpoint_interfaces:
        - ecr.api
        - ecr.dkr
        - logs
        - secretsmanager
        - ssm
      endpoint_gateways:
        - s3
      public_subnets:
        us-east-1a:
          - 10.0.254.0/24
        us-east-1b:
          - 10.0.255.0/24
      private_subnets:
        us-east-1a:
          - 10.0.0.0/24
        us-east-1b:
          - 10.0.1.0/24
  tb:network:SecurityGroupWithRules:
    backend:
      rules:
        egress:
          - cidr_blocks: ["0.0.0.0/0"]
            description: TLS Egress
            protocol: tcp
            from_port: 443
            to_port: 443
          - cidr_blocks: ["0.0.0.0/0"]
            description: SMTP Egress
            protocol: tcp
            from_port: 587
            to_port: 587
    backend-alb:
      rules:
        ingress:
          - prefix_list_ids: ["pl-3b927c52"]
            description: Ingress from Cloudfront
            protocol: tcp
            from_port: 5000
            to_port: 5000
          - cidr_blocks: ["0.0.0.0/0"] 
            description: Ingress from Internet
            protocol: tcp
            from_port: 80
            to_port: 80
  tb:network:SecurityGroup:
    - cache
    - db
  tb:network:SecurityGroupRule:
    backend_ingress_from_alb:
      config:
        description: Ingress from ALB
        type: ingress
        protocol: tcp
        from_port: 5000
        to_port: 5000
    backend_egress_to_db:
      config:
        description: Egress to DB
        type: egress
        protocol: tcp
        from_port: 3306
        to_port: 3306
    backend_egress_to_cache:
      config:
        description: Egress to cache
        type: egress
        protocol: tcp
        from_port: 6379
        to_port: 6380
    backend_alb_egress_to_backend:
      config:
        description: Egress to backend
        type: egress
        protocol: tcp
        from_port: 5000
        to_port: 5000
    cache_ingress_from_backend:
      config:
        description: Ingress from backend
        type: ingress
        protocol: tcp
        from_port: 6379
        to_port: 6380
    cache_egress_to_db:
      config:
        description: Egress to DB
        type: egress
        protocol: tcp
        from_port: 3306
        to_port: 3306
    db_ingress_from_backend:
      config:
        description: Ingress from backend
        type: ingress
        protocol: tcp
        from_port: 3306
        to_port: 3306
    db_ingress_from_cache:
      config:
        description: Ingress from cache
        type: ingress
        protocol: tcp
        from_port: 3306
        to_port: 3306
  tb:rds:RdsDatabaseGroup:
    database:
      db_name: database
      subnets: vpc.private_subnets
      vpc_cidr: 10.0.0.0/23
      allocated_storage: 10
      auto_minor_version_upgrade: True
      apply_immediately: True
      backup_retention_period: 0
      blue_green_update: False
      build_jumphost: False
      db_username: user
      enabled_cluster_cloudwatch_logs_exports: False
      enabled_instance_cloudwatch_logs_exports: False
      engine: mysql
      engine_version: 8.0.35
      instance_class: db.t3.medium
      internal: True
      jumphost_public_key: None
      jumphost_source_cidrs: []
      jumphost_user_data: None
      max_allocated_storage: 0
      num_instances: 1
#      parameters: [{"require_secure_transport": "False"}]
      parameter_group_family: mysql8.0
      performance_insights_enabled: False
      port: 3306
      skip_final_snapshot: True
      storage_type: gp3