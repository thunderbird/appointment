name: Primary Workflow

concurrency:
  group: iac
  cancel-in-progress: true

on:
  push:

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: '1.6.2'
  TG_VERSION: '0.55.15'
  AWS_REGION: us-east-1

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      run-iac: ${{ steps.check.outputs.run-iac }}
      run-backend: ${{ steps.check.outputs.run-backend }}
      run-frontend: ${{ steps.check.outputs.run-frontend }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: check
        with:
          filters: |
            run-iac:
              - 'tofu/**'
              - '.github/workflows/**'
            run-backend:
              - 'backend/**'
              - 'tofu/modules/services/backend-service/**'
            run-frontend:
              - 'frontend/**'

  verify-iac:
    needs: detect-changes
    if: github.ref != 'refs/heads/main' && needs.detect-changes.outputs.run-iac == 'true'
    strategy:
      max-parallel: 1
      matrix:
        environment: [stage, production]
    uses: ./.github/workflows/verify-iac.yaml
    with:
      tf_version: $TF_VERSION
      tg_version: $TG_VERSION
      aws_region: $AWS_REGION
      environment: ${{ matrix.environment }}
    secrets: inherit

  apply-iac:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.run-iac == 'true'
    strategy:
      max-parallel: 1
      matrix:
        environment: [stage]
    uses: ./.github/workflows/apply-iac.yaml
    with:
      tf_version: $TF_VERSION
      tg_version: $TG_VERSION
      aws_region: $AWS_REGION
      environment: ${{ matrix.environment }}
    secrets: inherit

  ci-tests:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && (needs.detect-changes.outputs.run-backend == 'true' || needs.detect-changes.outputs.run-frontend == 'true')
    uses: ./.github/workflows/ci-tests.yaml

  verify-backend:
    needs: detect-changes
    if: github.ref != 'refs/heads/main' && needs.detect-changes.outputs.run-iac == 'true'
    strategy:
      max-parallel: 1
      matrix:
        environment: [stage, production]
    uses: ./.github/workflows/verify-backend.yaml
    with:
      tf_version: $TF_VERSION
      tg_version: $TG_VERSION
      aws_region: $AWS_REGION
      environment: ${{ matrix.environment }}
    secrets: inherit

  deploy-backend:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.run-backend == 'true'
    strategy:
      max-parallel: 1
      matrix:
        environment: [stage]
    uses: ./.github/workflows/deploy-backend.yaml
    with:
      tf_version: $TF_VERSION
      tg_version: $TG_VERSION
      aws_region: $AWS_REGION
      environment: ${{ matrix.environment }}
    secrets: inherit

  deploy-frontend:
    needs: detect-changes
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.run-frontend == 'true'
    uses: ./.github/workflows/deploy-frontend.yaml
    with:
      aws_region: $AWS_REGION
      bucket: tb-apmt-stage-frontend
      build_environment: staging
    secrets: inherit

