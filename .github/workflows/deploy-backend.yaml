name: Deploy Backend

# Stop any pending jobs
concurrency:
  group: backend
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      tf_version:
        required: true
        type: string
      tg_version:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string

env:
  ECR_REPOSITORY: appointment

permissions:
  id-token: write
  contents: read

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{secrets.IAM_ROLE}}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{inputs.aws_region}}

    - name: install opentofu
      uses: opentofu/setup-opentofu@v1
      with: 
        tofu_version: ${{inputs.tf_version}}
        tofu_wrapper: false

    - name: install terragrunt
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v${{ inputs.tg_version }}/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        terragrunt -v

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build, tag, and push backend image to Amazon ECR
      id: build-backend
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: backend-${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend -f ./backend/deploy.dockerfile
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image_backend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: backend-service
      working-directory: ./tofu/environments/${{inputs.environment}}/services/backend-service
      run: |
        terragrunt init
        terragrunt validate
        terragrunt plan -var 'image=${{ steps.build-backend.outputs.image_backend }}' -out tfplan
        terragrunt apply tfplan

